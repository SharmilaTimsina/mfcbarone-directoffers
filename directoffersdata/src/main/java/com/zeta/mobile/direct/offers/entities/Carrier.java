/*
 * Created on 1 Sep 2017 ( Time 15:57:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a composite Primary Key  

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;
import java.util.List;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Persistent class for entity stored in table "carriers"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "carriers", catalog = "directoffers")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "Carrier.countAll", query = "SELECT COUNT(x) FROM Carrier x"),
		@NamedQuery(name = "Carrier.findByNetworkCode", query = "SELECT x FROM Carrier x where x.networkCode =:networkCode")

})
public class Carrier implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", nullable = false)
	private Long id;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "network_code", nullable = false, unique = true)
	private Long networkCode;

	@Column(name = "name")
	private String name;

	@Column(name = "msisdn_regex_validation")
	private String msisdnRegexValidation;

	@Column(name = "carrier_requirements_info")
	private String carrierRequirementsInfo;

	@Column(name = "carriers_price_limit_per_transaction_info")
	private String carriersPriceLimitPerTransactionInfo;

	@Column(name = "monthly_transaction_limit_info")
	private String monthlyTransactionLimitInfo;

	@Column(name = "allow_decimals_info")
	private boolean allowDecimalsInfo;

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------
	@ManyToOne
	@JsonManagedReference
	@JoinColumn(name = "country_id", referencedColumnName = "id", insertable = false, updatable = false)
	private Country countries;

	@ManyToOne
	@JsonManagedReference
	@JoinColumn(name = "connection_id", referencedColumnName = "id", insertable = false, updatable = false)
	private Connection connections;

	@OneToMany(mappedBy = "carrier", targetEntity = CampaignOffer.class)
	@JsonBackReference
	private List<CampaignOffer> listOfCampaignOffers;

	public Long getNetworkCode() {
		return networkCode;
	}

	public void setNetworkCode(Long networkCode) {
		this.networkCode = networkCode;
	}

	public List<CampaignOffer> getListOfCampaignOffers() {
		return listOfCampaignOffers;
	}

	public void setListOfCampaignOffers(List<CampaignOffer> listOfCampaignOffers) {
		this.listOfCampaignOffers = listOfCampaignOffers;
	}

	// --- DATABASE MAPPING : name ( TEXT )
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getMsisdnRegexValidation() {
		return msisdnRegexValidation;
	}

	public void setMsisdnRegexValidation(String msisdnRegexValidation) {
		this.msisdnRegexValidation = msisdnRegexValidation;
	}

	public String getCarrierRequirementsInfo() {
		return carrierRequirementsInfo;
	}

	public void setCarrierRequirementsInfo(String carrierRequirementsInfo) {
		this.carrierRequirementsInfo = carrierRequirementsInfo;
	}

	public String getCarriersPriceLimitPerTransactionInfo() {
		return carriersPriceLimitPerTransactionInfo;
	}

	public void setCarriersPriceLimitPerTransactionInfo(String carriersPriceLimitPerTransactionInfo) {
		this.carriersPriceLimitPerTransactionInfo = carriersPriceLimitPerTransactionInfo;
	}

	public String getMonthlyTransactionLimitInfo() {
		return monthlyTransactionLimitInfo;
	}

	public void setMonthlyTransactionLimitInfo(String monthlyTransactionLimitInfo) {
		this.monthlyTransactionLimitInfo = monthlyTransactionLimitInfo;
	}

	public boolean isAllowDecimalsInfo() {
		return allowDecimalsInfo;
	}

	public void setAllowDecimalsInfo(boolean allowDecimalsInfo) {
		this.allowDecimalsInfo = allowDecimalsInfo;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------
	public void setCountries(Country countries) {
		this.countries = countries;
	}

	public Country getCountries() {
		return this.countries;
	}

	public void setConnections(Connection connections) {
		this.connections = connections;
	}

	public Connection getConnections() {
		return this.connections;
	}

}
