/*
 * Created on 1 Sep 2017 ( Time 15:57:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Persistent class for entity stored in table "campaigns"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "campaigns", catalog = "directoffers")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "Campaign.countAll", query = "SELECT COUNT(x) FROM Campaign x"),
		@NamedQuery(name = "Campaign.findByName", query = "SELECT x FROM Campaign x where x.name =:name") })
public class Campaign implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", nullable = false)
	private Long id;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "name", nullable = false)
	private String name;

	@Column(name = "category", nullable = false)
	private String category;

	@Column(name = "external_id", nullable = false)
	private String externalId;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false)
	private Date creationDate;

	@Column(name = "created_by", nullable = false)
	private String createdBy;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "edition_date")
	private Date edidate;

	@Column(name = "edited_by")
	private String editedBy;

	@Column(name = "edited_reason")
	private String editedReason;

	@Column(name = "status")
	private String status;

	// "connectionid" (column "connectionId") is not defined by itself because used
	// as FK in a link

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------
	@OneToMany(mappedBy = "campaign", targetEntity = CampaignOffer.class)
	@JsonBackReference
	private List<CampaignOffer> listOfCampaignOffers;

	@OneToMany(mappedBy = "campaign", targetEntity = Impression.class, cascade = CascadeType.PERSIST)
	@JsonBackReference
	private List<Impression> listOfImpressions;

	@ManyToOne
	@JoinColumn(name = "connection_id", referencedColumnName = "id")
	@JsonManagedReference
	private Connection connections;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public Campaign() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setId(Long id) {
		this.id = id;
	}

	public Long getId() {
		return this.id;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : name ( INT )
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	// --- DATABASE MAPPING : extenalId ( INT )
	public void setExtenalid(String extenalid) {
		this.externalId = extenalid;
	}

	public String getExtenalid() {
		return this.externalId;
	}

	// --- DATABASE MAPPING : creationDate ( TIMESTAMP )
	public void setCreationDate(Date creationdate) {
		this.creationDate = creationdate;
	}

	public Date getCreationDate() {
		return this.creationDate;
	}

	// --- DATABASE MAPPING : createdBy ( TEXT )
	public void setCreatedby(String createdby) {
		this.createdBy = createdby;
	}

	public String getCreatedby() {
		return this.createdBy;
	}

	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	public Date getEdidate() {
		return edidate;
	}

	public void setEdidate(Date edidate) {
		this.edidate = edidate;
	}

	public String getEditedBy() {
		return editedBy;
	}

	public void setEditedBy(String editedBy) {
		this.editedBy = editedBy;
	}

	public String getEditedReason() {
		return editedReason;
	}

	public void setEditedReason(String editedReason) {
		this.editedReason = editedReason;
	}

	public Connection getConnections() {
		return connections;
	}

	public void setConnections(Connection connections) {
		this.connections = connections;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getExternalId() {
		return externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	public List<CampaignOffer> getListOfCampaignOffers() {
		return listOfCampaignOffers;
	}

	public void setListOfCampaignOffers(List<CampaignOffer> listOfCampaignOffers) {
		this.listOfCampaignOffers = listOfCampaignOffers;
	}

	public List<Impression> getListOfImpressions() {
		return listOfImpressions;
	}

	public void setListOfImpressions(List<Impression> listOfImpressions) {
		this.listOfImpressions = listOfImpressions;
	}

}
