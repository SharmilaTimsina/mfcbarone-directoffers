/*
 * Created on 1 Sep 2017 ( Time 15:57:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "impressions"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="impressions", catalog="directoffers" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ImpressionsEntity.countAll", query="SELECT COUNT(x) FROM ImpressionsEntity x" )
} )
public class ImpressionsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="msisdn")
    private String     msisdn       ;

    @Column(name="screenSize")
    private String     screensize   ;

    @Column(name="timeZone")
    private Integer    timezone     ;

    @Column(name="broswerLanguage")
    private String     broswerlanguage ;

    @Column(name="platform")
    private String     platform     ;

    @Column(name="broswer")
    private String     broswer      ;

    @Column(name="sourceIp")
    private String     sourceip     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creationDate")
    private Date       creationdate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createdBy")
    private Date       createdby    ;

	// "offerid" (column "offerId") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="offerId", referencedColumnName="id")
    private CampaignoffersEntity campaignoffers;

    @OneToMany(mappedBy="impressions", targetEntity=SubscriptionsEntity.class)
    private List<SubscriptionsEntity> listOfSubscriptions;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ImpressionsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : msisdn ( TEXT ) 
    public void setMsisdn( String msisdn ) {
        this.msisdn = msisdn;
    }
    public String getMsisdn() {
        return this.msisdn;
    }

    //--- DATABASE MAPPING : screenSize ( TEXT ) 
    public void setScreensize( String screensize ) {
        this.screensize = screensize;
    }
    public String getScreensize() {
        return this.screensize;
    }

    //--- DATABASE MAPPING : timeZone ( INT ) 
    public void setTimezone( Integer timezone ) {
        this.timezone = timezone;
    }
    public Integer getTimezone() {
        return this.timezone;
    }

    //--- DATABASE MAPPING : broswerLanguage ( TEXT ) 
    public void setBroswerlanguage( String broswerlanguage ) {
        this.broswerlanguage = broswerlanguage;
    }
    public String getBroswerlanguage() {
        return this.broswerlanguage;
    }

    //--- DATABASE MAPPING : platform ( TEXT ) 
    public void setPlatform( String platform ) {
        this.platform = platform;
    }
    public String getPlatform() {
        return this.platform;
    }

    //--- DATABASE MAPPING : broswer ( TEXT ) 
    public void setBroswer( String broswer ) {
        this.broswer = broswer;
    }
    public String getBroswer() {
        return this.broswer;
    }

    //--- DATABASE MAPPING : sourceIp ( TEXT ) 
    public void setSourceip( String sourceip ) {
        this.sourceip = sourceip;
    }
    public String getSourceip() {
        return this.sourceip;
    }

    //--- DATABASE MAPPING : creationDate ( TIMESTAMP ) 
    public void setCreationdate( Date creationdate ) {
        this.creationdate = creationdate;
    }
    public Date getCreationdate() {
        return this.creationdate;
    }

    //--- DATABASE MAPPING : createdBy ( TIMESTAMP ) 
    public void setCreatedby( Date createdby ) {
        this.createdby = createdby;
    }
    public Date getCreatedby() {
        return this.createdby;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setCampaignoffers( CampaignoffersEntity campaignoffers ) {
        this.campaignoffers = campaignoffers;
    }
    public CampaignoffersEntity getCampaignoffers() {
        return this.campaignoffers;
    }

    public void setListOfSubscriptions( List<SubscriptionsEntity> listOfSubscriptions ) {
        this.listOfSubscriptions = listOfSubscriptions;
    }
    public List<SubscriptionsEntity> getListOfSubscriptions() {
        return this.listOfSubscriptions;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        // attribute 'msisdn' not usable (type = String Long Text)
        // attribute 'screensize' not usable (type = String Long Text)
        sb.append(timezone);
        // attribute 'broswerlanguage' not usable (type = String Long Text)
        // attribute 'platform' not usable (type = String Long Text)
        // attribute 'broswer' not usable (type = String Long Text)
        // attribute 'sourceip' not usable (type = String Long Text)
        sb.append("|");
        sb.append(creationdate);
        sb.append("|");
        sb.append(createdby);
        return sb.toString(); 
    } 

}
