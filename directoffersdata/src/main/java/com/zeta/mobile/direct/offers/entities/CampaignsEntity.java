/*
 * Created on 1 Sep 2017 ( Time 15:57:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "campaigns"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "campaigns", catalog = "directoffers")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "CampaignsEntity.countAll", query = "SELECT COUNT(x) FROM CampaignsEntity x") })
public class CampaignsEntity implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", nullable = false)
	private Integer id;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "name", nullable = false)
	private Integer name;

	@Column(name = "teste", nullable = false)
	private Integer teste;

	@Column(name = "typeOfTraffic", nullable = false)
	private String typeoftraffic;

	@Column(name = "extenalId", nullable = false)
	private Integer extenalid;

	@Column(name = "countryId", nullable = false, length = 45)
	private String countryid;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationDate", nullable = false)
	private Date creationdate;

	@Column(name = "createdBy", nullable = false)
	private String createdby;

	// "connectionid" (column "connectionId") is not defined by itself because used
	// as FK in a link

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------
	@OneToMany(mappedBy = "campaigns", targetEntity = CampaignoffersEntity.class)
	private List<CampaignoffersEntity> listOfCampaignoffers;

	@ManyToOne
	@JoinColumn(name = "connectionId", referencedColumnName = "id")
	private ConnectionsEntity connections;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public CampaignsEntity() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : name ( INT )
	public void setName(Integer name) {
		this.name = name;
	}

	public Integer getName() {
		return this.name;
	}

	public Integer getTeste() {
		return teste;
	}

	public void setTeste(Integer teste) {
		this.teste = teste;
	}

	// --- DATABASE MAPPING : typeOfTraffic ( TEXT )
	public void setTypeoftraffic(String typeoftraffic) {
		this.typeoftraffic = typeoftraffic;
	}

	public String getTypeoftraffic() {
		return this.typeoftraffic;
	}

	// --- DATABASE MAPPING : extenalId ( INT )
	public void setExtenalid(Integer extenalid) {
		this.extenalid = extenalid;
	}

	public Integer getExtenalid() {
		return this.extenalid;
	}

	// --- DATABASE MAPPING : countryId ( VARCHAR )
	public void setCountryid(String countryid) {
		this.countryid = countryid;
	}

	public String getCountryid() {
		return this.countryid;
	}

	// --- DATABASE MAPPING : creationDate ( TIMESTAMP )
	public void setCreationdate(Date creationdate) {
		this.creationdate = creationdate;
	}

	public Date getCreationdate() {
		return this.creationdate;
	}

	// --- DATABASE MAPPING : createdBy ( TEXT )
	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	public String getCreatedby() {
		return this.createdby;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------
	public void setListOfCampaignoffers(List<CampaignoffersEntity> listOfCampaignoffers) {
		this.listOfCampaignoffers = listOfCampaignoffers;
	}

	public List<CampaignoffersEntity> getListOfCampaignoffers() {
		return this.listOfCampaignoffers;
	}

	public void setConnections(ConnectionsEntity connections) {
		this.connections = connections;
	}

	public ConnectionsEntity getConnections() {
		return this.connections;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		sb.append(id);
		sb.append("]:");
		sb.append(name);
		// attribute 'typeoftraffic' not usable (type = String Long Text)
		sb.append("|");
		sb.append(extenalid);
		sb.append("|");
		sb.append(countryid);
		sb.append("|");
		sb.append(creationdate);
		// attribute 'createdby' not usable (type = String Long Text)
		return sb.toString();
	}

}
