/*
 * Created on 1 Sep 2017 ( Time 15:57:06 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;
import java.util.Date;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;

/**
 * Persistent class for entity stored in table "connections"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "connections", catalog = "directoffers")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "Connection.countAll", query = "SELECT COUNT(x) FROM Connection x") })
public class Connection implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", nullable = false)
	private Long id;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "name", nullable = false)
	private String name;

	@Column(name = "private_key")
	private String privateKey;

	@Column(name = "public_key")
	private String publickey;

	@Column(name = "zeta_user")
	private String zetaUser;

	@Column(name = "zeta_password")
	private String zetaPassword;

	@Column(name = "url")
	private String url;

	@Column(name = "support_phone_number")
	private String supportphonenumber;

	@Column(name = "support_email")
	private String supportemail;

	@Column(name = "support_skype")
	private String supportskype;

	@Column(name = "integration_type", nullable = false)
	private String integrationtype;

	@Column(name = "status", nullable = false)
	private String status;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "status_date")
	private Date statusDate;

	@Column(name = "status_reason")
	private String statusReason;

	@Column(name = "integration_protocol")
	private String integrationProtocol;

	// "currencyid" (column "currencyId") is not defined by itself because used as
	// FK in a link

	@OneToMany(mappedBy = "connections", targetEntity = Carrier.class)
	@JsonBackReference
	private List<Carrier> listOfCarriers;

	@OneToMany(mappedBy = "connections", targetEntity = Campaign.class)
	@JsonBackReference
	private List<Campaign> listOfCampaigns;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public Connection() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setId(Long id) {
		this.id = id;
	}

	public Long getId() {
		return this.id;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : name ( TEXT )
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public String getPrivateKey() {
		return privateKey;
	}

	public void setPrivateKey(String privateKey) {
		this.privateKey = privateKey;
	}

	public String getPublickey() {
		return publickey;
	}

	public void setPublickey(String publickey) {
		this.publickey = publickey;
	}

	public String getZetaUser() {
		return zetaUser;
	}

	public void setZetaUser(String zetaUser) {
		this.zetaUser = zetaUser;
	}

	public String getZetaPassword() {
		return zetaPassword;
	}

	public void setZetaPassword(String zetaPassword) {
		this.zetaPassword = zetaPassword;
	}

	// --- DATABASE MAPPING : url ( TEXT )
	public void setUrl(String url) {
		this.url = url;
	}

	public String getUrl() {
		return this.url;
	}

	// --- DATABASE MAPPING : supportPhoneNumber ( TEXT )
	public void setSupportphonenumber(String supportphonenumber) {
		this.supportphonenumber = supportphonenumber;
	}

	public String getSupportphonenumber() {
		return this.supportphonenumber;
	}

	// --- DATABASE MAPPING : supportEmail ( TEXT )
	public void setSupportemail(String supportemail) {
		this.supportemail = supportemail;
	}

	public String getSupportemail() {
		return this.supportemail;
	}

	// --- DATABASE MAPPING : supportSkype ( TEXT )
	public void setSupportskype(String supportskype) {
		this.supportskype = supportskype;
	}

	public String getSupportskype() {
		return this.supportskype;
	}

	// --- DATABASE MAPPING : integrationType ( TEXT )
	public void setIntegrationtype(String integrationtype) {
		this.integrationtype = integrationtype;
	}

	public String getIntegrationtype() {
		return this.integrationtype;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public Date getStatusDate() {
		return statusDate;
	}

	public void setStatusDate(Date statusDate) {
		this.statusDate = statusDate;
	}

	public String getStatusReason() {
		return statusReason;
	}

	public void setStatusReason(String statusReason) {
		this.statusReason = statusReason;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------

	public void setListOfCarriers(List<Carrier> listOfCarriers) {
		this.listOfCarriers = listOfCarriers;
	}

	public List<Carrier> getListOfCarriers() {
		return this.listOfCarriers;
	}

	public void setListOfCampaigns(List<Campaign> listOfCampaigns) {
		this.listOfCampaigns = listOfCampaigns;
	}

	public List<Campaign> getListOfCampaigns() {
		return this.listOfCampaigns;
	}

	public String getIntegrationProtocol() {
		return integrationProtocol;
	}

	public void setIntegrationProtocol(String integrationProtocol) {
		this.integrationProtocol = integrationProtocol;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		sb.append(id);
		sb.append("]:");
		// attribute 'name' not usable (type = String Long Text)
		// attribute 'securitykey' not usable (type = String Long Text)
		// attribute 'url' not usable (type = String Long Text)
		// attribute 'supportphonenumber' not usable (type = String Long Text)
		// attribute 'supportemail' not usable (type = String Long Text)
		// attribute 'supportskype' not usable (type = String Long Text)
		// attribute 'integrationtype' not usable (type = String Long Text)
		return sb.toString();
	}

}
