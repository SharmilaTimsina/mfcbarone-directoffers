/*
 * Created on 1 Sep 2017 ( Time 15:57:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Persistent class for entity stored in table "pricepointplan"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name = "pricepointplan", catalog = "directoffers")
// Define named queries here
@NamedQueries({
		@NamedQuery(name = "PricepointplanEntity.countAll", query = "SELECT COUNT(x) FROM PricepointplanEntity x") })
public class PricepointplanEntity implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", nullable = false)
	private Integer id;

	@Column(name = "external_id", nullable = false)
	private String externalId;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------

	@Column(name = "value", nullable = false)
	private Double value;

	@Column(name = "frequency", nullable = false)
	private Integer frequency;

	@Column(name = "retry_on_fail")
	private Boolean retryonfail;

	@Column(name = "retry_count")
	private int retryCount;

	@Column(name = "minutes_before_retry")
	private int minutesBeforeRetry;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creationDate")
	private Date creationdate;

	@Column(name = "createdBy")
	private String createdby;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "editionDate")
	private Date editiondate;

	@Column(name = "editedBy")
	private String editedby;

	@Column(name = "name")
	private String name;

	// ----------------------------------------------------------------------
	// ENTITY LINKS ( RELATIONSHIP )
	// ----------------------------------------------------------------------
	@OneToMany(mappedBy = "pricepointplan", targetEntity = CampaignoffersEntity.class)
	private List<CampaignoffersEntity> listOfCampaignoffers;

	@JoinColumn(name = "carrierid", referencedColumnName = "id", insertable = false, updatable = false)
	@ManyToOne
	@JsonManagedReference
	private CarriersEntity carrier;

	@JoinColumn(name = "currencyId", referencedColumnName = "id", insertable = false, updatable = false)
	@ManyToOne
	@JsonManagedReference
	private CurrenciesEntity currencies;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public PricepointplanEntity() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return this.id;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : carrierId ( INT )
	public void setCarrier(CarriersEntity carrier) {
		this.carrier = carrier;
	}

	public CarriersEntity getCarrier() {
		return this.carrier;
	}

	// --- DATABASE MAPPING : frequency ( INT )
	public void setFrequency(Integer frequency) {
		this.frequency = frequency;
	}

	public Integer getFrequency() {
		return this.frequency;
	}

	// --- DATABASE MAPPING : creationDate ( TIMESTAMP )
	public void setCreationdate(Date creationdate) {
		this.creationdate = creationdate;
	}

	public Date getCreationdate() {
		return this.creationdate;
	}

	// --- DATABASE MAPPING : createdBy ( TEXT )
	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	public String getCreatedby() {
		return this.createdby;
	}

	// --- DATABASE MAPPING : editionDate ( TIMESTAMP )
	public void setEditiondate(Date editiondate) {
		this.editiondate = editiondate;
	}

	public Date getEditiondate() {
		return this.editiondate;
	}

	public Double getValue() {
		return value;
	}

	public void setValue(Double value) {
		this.value = value;
	}

	public Boolean getRetryonfail() {
		return retryonfail;
	}

	public void setRetryonfail(Boolean retryonfail) {
		this.retryonfail = retryonfail;
	}

	public int getRetryCount() {
		return retryCount;
	}

	public void setRetryCount(int retryCount) {
		this.retryCount = retryCount;
	}

	public int getMinutesBeforeRetry() {
		return minutesBeforeRetry;
	}

	public void setMinutesBeforeRetry(int minutesBeforeRetry) {
		this.minutesBeforeRetry = minutesBeforeRetry;
	}

	// --- DATABASE MAPPING : editedBy ( TEXT )
	public void setEditedby(String editedby) {
		this.editedby = editedby;
	}

	public String getEditedby() {
		return this.editedby;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR LINKS
	// ----------------------------------------------------------------------
	public void setListOfCampaignoffers(List<CampaignoffersEntity> listOfCampaignoffers) {
		this.listOfCampaignoffers = listOfCampaignoffers;
	}

	public List<CampaignoffersEntity> getListOfCampaignoffers() {
		return this.listOfCampaignoffers;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public CurrenciesEntity getCurrencies() {
		return currencies;
	}

	public void setCurrencies(CurrenciesEntity currencies) {
		this.currencies = currencies;
	}

	public String getExternalId() {
		return externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

}
