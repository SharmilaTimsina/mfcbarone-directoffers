/*
 * Created on 1 Sep 2017 ( Time 15:57:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "pricepointplan"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="pricepointplan", catalog="directoffers" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PricepointplanEntity.countAll", query="SELECT COUNT(x) FROM PricepointplanEntity x" )
} )
public class PricepointplanEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="carrierId", nullable=false)
    private Integer    carrierid    ;

    @Column(name="tax", nullable=false)
    private Double     tax          ;

    @Column(name="frequency", nullable=false)
    private Integer    frequency    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_period")
    private Date       startPeriod  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="end_period")
    private Date       endPeriod    ;

    @Column(name="retryOnFail")
    private Byte       retryonfail  ;

    @Column(name="topUp", nullable=false)
    private Byte       topup        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="creationDate")
    private Date       creationdate ;

    @Column(name="createdBy")
    private String     createdby    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="editionDate")
    private Date       editiondate  ;

    @Column(name="editedBy")
    private String     editedby     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="pricepointplan", targetEntity=CampaignoffersEntity.class)
    private List<CampaignoffersEntity> listOfCampaignoffers;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PricepointplanEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : carrierId ( INT ) 
    public void setCarrierid( Integer carrierid ) {
        this.carrierid = carrierid;
    }
    public Integer getCarrierid() {
        return this.carrierid;
    }

    //--- DATABASE MAPPING : tax ( DOUBLE ) 
    public void setTax( Double tax ) {
        this.tax = tax;
    }
    public Double getTax() {
        return this.tax;
    }

    //--- DATABASE MAPPING : frequency ( INT ) 
    public void setFrequency( Integer frequency ) {
        this.frequency = frequency;
    }
    public Integer getFrequency() {
        return this.frequency;
    }

    //--- DATABASE MAPPING : start_period ( TIMESTAMP ) 
    public void setStartPeriod( Date startPeriod ) {
        this.startPeriod = startPeriod;
    }
    public Date getStartPeriod() {
        return this.startPeriod;
    }

    //--- DATABASE MAPPING : end_period ( TIMESTAMP ) 
    public void setEndPeriod( Date endPeriod ) {
        this.endPeriod = endPeriod;
    }
    public Date getEndPeriod() {
        return this.endPeriod;
    }

    //--- DATABASE MAPPING : retryOnFail ( TINYINT ) 
    public void setRetryonfail( Byte retryonfail ) {
        this.retryonfail = retryonfail;
    }
    public Byte getRetryonfail() {
        return this.retryonfail;
    }

    //--- DATABASE MAPPING : topUp ( TINYINT ) 
    public void setTopup( Byte topup ) {
        this.topup = topup;
    }
    public Byte getTopup() {
        return this.topup;
    }

    //--- DATABASE MAPPING : creationDate ( TIMESTAMP ) 
    public void setCreationdate( Date creationdate ) {
        this.creationdate = creationdate;
    }
    public Date getCreationdate() {
        return this.creationdate;
    }

    //--- DATABASE MAPPING : createdBy ( TEXT ) 
    public void setCreatedby( String createdby ) {
        this.createdby = createdby;
    }
    public String getCreatedby() {
        return this.createdby;
    }

    //--- DATABASE MAPPING : editionDate ( TIMESTAMP ) 
    public void setEditiondate( Date editiondate ) {
        this.editiondate = editiondate;
    }
    public Date getEditiondate() {
        return this.editiondate;
    }

    //--- DATABASE MAPPING : editedBy ( TEXT ) 
    public void setEditedby( String editedby ) {
        this.editedby = editedby;
    }
    public String getEditedby() {
        return this.editedby;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfCampaignoffers( List<CampaignoffersEntity> listOfCampaignoffers ) {
        this.listOfCampaignoffers = listOfCampaignoffers;
    }
    public List<CampaignoffersEntity> getListOfCampaignoffers() {
        return this.listOfCampaignoffers;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(carrierid);
        sb.append("|");
        sb.append(tax);
        sb.append("|");
        sb.append(frequency);
        sb.append("|");
        sb.append(startPeriod);
        sb.append("|");
        sb.append(endPeriod);
        sb.append("|");
        sb.append(retryonfail);
        sb.append("|");
        sb.append(topup);
        sb.append("|");
        sb.append(creationdate);
        // attribute 'createdby' not usable (type = String Long Text)
        sb.append("|");
        sb.append(editiondate);
        // attribute 'editedby' not usable (type = String Long Text)
        return sb.toString(); 
    } 

}
