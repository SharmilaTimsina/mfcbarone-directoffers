/*
 * Created on 1 Sep 2017 ( Time 15:57:07 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.zeta.mobile.direct.offers.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.zeta.mobile.direct.offers.entities.helpers.SalesChannel;


@Entity
@Table(name = "subscriptions", catalog = "directoffers")
@NamedQueries({ @NamedQuery(name = "Subscription.countAll", query = "SELECT COUNT(x) FROM Subscription x"),
		@NamedQuery(name = "Subscription.findById", query = "SELECT x FROM Subscription x where x.id = :id"),
		@NamedQuery(name = "Subscription.findByCustomerAndCampaignOffer", query = "SELECT x FROM Subscription x where customer = :customer and campaignOffer= :campaignOffer") })
public class Subscription implements Serializable {

	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "id", nullable = false)
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;

	@Column(name = "external_id")
	private String externalid;

	@Column(name = "sales_channel")
	private SalesChannel salesChannel;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "next_renew_date")
	private Date nextrenewdate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false)
	private Date creationdate;

	@Column(name = "created_by", nullable = false)
	private String createdby;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "request_date", nullable = false)
	private Date requestDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date")
	private Date startDate;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", nullable = false)
	private Date endDate;

	@Column(name = "is_auto_renew", nullable = false)
	private Boolean isAutoRenew;

	@Column(name = "is_send_verification", nullable = false)
	private Boolean isSendVerification;

	@Column(name = "sales_channel_external_id")
	private String salesChannelExternalRef;

	@Column(name = "access_token")
	private String accessToken;

	@OneToOne
	@JoinColumn(name = "impression_id", referencedColumnName = "id")
	public Impression impression;
	
	@OneToMany(mappedBy = "subscription", targetEntity = MoMessages.class)
	@JsonBackReference
	private List<MoMessages> listOfMoMessages;
	
	@OneToMany(mappedBy = "subscription", targetEntity = MtMessages.class)
	@JsonBackReference
	private List<MoMessages> listOfMtMessages;
	
	@ManyToOne
	@JoinColumn(name = "customer_id", referencedColumnName = "id")
	@JsonManagedReference
	private Customer customer;

	@ManyToOne
	@JoinColumn(name = "campaign_offer_id", referencedColumnName = "id")
	@JsonManagedReference
	private CampaignOffer campaignOffer;

	@OneToMany(mappedBy = "subscription", targetEntity = SubscriptionStatus.class, cascade = CascadeType.ALL)
	@OrderBy("statusDate DESC")
	@JsonBackReference
	private List<SubscriptionStatus> listOfSubscriptionsStatus;

	public Subscription() {
		super();
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Long getId() {
		return this.id;
	}

	public Boolean getIsAutoRenew() {
		return isAutoRenew;
	}

	public void setIsAutoRenew(Boolean isAutoRenew) {
		this.isAutoRenew = isAutoRenew;
	}

	public List<SubscriptionStatus> getListOfSubscriptionsStatus() {
		return listOfSubscriptionsStatus;
	}

	public void setListOfSubscriptionsStatus(List<SubscriptionStatus> listOfSubscriptionsStatus) {
		this.listOfSubscriptionsStatus = listOfSubscriptionsStatus;
	}

	// --- DATABASE MAPPING : externalId ( VARCHAR )
	public void setExternalid(String externalid) {
		this.externalid = externalid;
	}

	public String getExternalid() {
		return this.externalid;
	}

	public void setNextrenewdate(Date nextrenewdate) {
		this.nextrenewdate = nextrenewdate;
	}

	public Date getNextrenewdate() {
		return this.nextrenewdate;
	}

	public Date getCreationdate() {
		return creationdate;
	}

	public void setCreationdate(Date creationdate) {
		this.creationdate = creationdate;
	}

	public String getCreatedby() {
		return createdby;
	}

	public void setCreatedby(String createdby) {
		this.createdby = createdby;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public Impression getImpression() {
		return impression;
	}

	public void setImpression(Impression impression) {
		this.impression = impression;
	}

	public Customer getCustomer() {
		return customer;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	public SalesChannel getSalesChannel() {
		return salesChannel;
	}

	public void setSalesChannel(SalesChannel salesChannel) {
		this.salesChannel = salesChannel;
	}

	public Boolean getIsSendVerification() {
		return isSendVerification;
	}

	public void setIsSendVerification(Boolean isSendVerification) {
		this.isSendVerification = isSendVerification;
	}

	public String getSalesChannelExternalRef() {
		return salesChannelExternalRef;
	}

	public void setSalesChannelExternalRef(String salesChannelExternalRef) {
		this.salesChannelExternalRef = salesChannelExternalRef;
	}

	public String getAccessToken() {
		return accessToken;
	}

	public void setAccessToken(String accessToken) {
		this.accessToken = accessToken;
	}

	public CampaignOffer getCampaignOffer() {
		return campaignOffer;
	}

	public void setCampaignOffer(CampaignOffer campaignOffer) {
		this.campaignOffer = campaignOffer;
	}

	public Date getRequestDate() {
		return requestDate;
	}

	public void setRequestDate(Date requestDate) {
		this.requestDate = requestDate;
	}

}
